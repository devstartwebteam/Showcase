@using Showcase.Helpers
@using Showcase.Models
@model Showcase.Models.Post

@{
    ViewBag.Title = "Posts";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>Create Post</h2>

@using (Html.BeginForm("Create", "Posts", FormMethod.Post, new {enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.PostName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PostName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PostName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PostUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PostUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PostUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Post Image", htmlAttributes: new { @class = "control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.PostImageUpload, null, new { @class = "form-control", type = "file" })
            @Html.ValidationMessageFor(model => model.PostImageUpload, "", new { @class = "text-danger" }) <br />
        </div>
    </div>

    <div class="form-group s-tiny-group">
        @Html.LabelFor(model => model.PostContent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea id="ShowcaseEditor" name="PostContent" class="ds-fields form-control"></textarea>
            @Html.ValidationMessageFor(model => model.PostContent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Active)
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.DropDownListFor(model => model.Author, Post.GetAuthorList(), "Select Author", new { @class = "browser-default custom-select" })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Categories, "Assign Categories", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Partial("_CheckBoxList", ShowcaseHtmlHelpers.GetCheckboxList("SelectedCategoryIds", "ds-checkbox", Model.CategoryMultiSelectList))
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tags, "Assign Tags", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Partial("_CheckBoxList", ShowcaseHtmlHelpers.GetCheckboxList("SelectedTagIds", "ds-checkbox", Model.TagMultiSelectList))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>