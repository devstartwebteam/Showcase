@model Showcase.Models.RegisterViewModel
@{
    ViewBag.Title = "Create an Account";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @id = "s-login-form", @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <p class="s-error-message">
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </p>
            <div class="input-group input-group-alternative mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="ni ni-hat-3"></i></span>
                </div>
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Name", @type = "text" })
            </div>
        </div>

        <div class="form-group">
            <p class="s-error-message">
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </p>
            <div class="input-group input-group-alternative mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="ni ni-email-83"></i></span>
                </div>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email", @type = "email" })
            </div>
        </div>

        <div class="form-group">
            <p class="s-error-message">
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </p>
            <div class="input-group input-group-alternative">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="ni ni-lock-circle-open"></i></span>
                </div>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password", @type = "password" })
            </div>
        </div>

        <div class="form-group">
            <p class="s-error-message">
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </p>
            <div class="input-group input-group-alternative">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="ni ni-lock-circle-open"></i></span>
                </div>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password", @type = "password" })
            </div>
        </div>

        <div class="form-group">
            <div class="text-center">
                <button id="s-login-submit" type="submit" class="btn" value="Register">Create account</button>
            </div>
        </div>
    }

                            

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
